package handler

import (
	"context"
	"fmt"
	"monofamily/internal/errorsx"
	"monofamily/internal/session"
	"strconv"

	tb "gopkg.in/telebot.v3"
)

func (h *Handler) DeleteMember(c tb.Context) error {
	data := c.Callback().Data
	ctx := context.Background()

	memberID, err := strconv.ParseInt(data, 10, 64)
	if err != nil {
		return c.Send("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π ID.")
	}

	member, err := h.usecase.GetUserByID(ctx, memberID)
	if err != nil {
		return c.Send(ErrInternalServerForUser.Error())
	}

	inlineKeys := [][]tb.InlineButton{
		{BtnMemberDeleteNo}, {tb.InlineButton{Unique: "delete_member_yes", Text: "‚úÖ –¢–∞–∫", Data: strconv.FormatInt(member.ID, 10)}},
	}

	return c.Send(
		fmt.Sprintf("–î—ñ–π—Å–Ω–æ —Ö–æ—á–µ—à –≤–∏–¥–∞–ª–∏—Ç–∏ —É—á–∞—Å–Ω–∏–∫–∞ `%s`?", member.Firstname),
		&tb.SendOptions{
			ParseMode:   tb.ModeMarkdown,
			ReplyMarkup: &tb.ReplyMarkup{InlineKeyboard: inlineKeys},
		},
	)
}

func (h *Handler) ProcessMemberDeletion(c tb.Context) error {
	userID := c.Sender().ID
	data := c.Callback().Data
	ctx := context.Background()

	memberID, err := strconv.ParseInt(data, 10, 64)
	if err != nil {
		return c.Edit("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.")
	}

	us, ok := c.Get("user_state").(*session.UserState)
	if !ok || us == nil {
		return c.Edit(ErrUnableToGetUserState.Error())
	}

	removeErr := h.usecase.RemoveMember(ctx, us.Family.ID, userID, memberID)
	if removeErr != nil {
		switch e := err.(type) {
		case *errorsx.CustomError[struct{}]:
			if e.Code == errorsx.ErrCodeNoPermission {
				return c.Edit("–£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è.")
			}
			if e.Code == errorsx.ErrCodeCannotRemoveSelf {
				return c.Edit("–¢–∏ –Ω–µ –º–æ–∂–µ—à –≤–∏–¥–∞–ª–∏—Ç–∏ —Å–µ–±–µ.")
			}
		}
		return c.Edit("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å—ñ–º'—ó. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.")
	}

	h.bot.Edit(c.Message(), "–£—á–∞—Å–Ω–∏–∫–∞ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ. –û–Ω–æ–≤–ª—é—é —Å–ø–∏—Å–æ–∫...")

	h.bot.Send(c.Sender(), "‚îÄ‚îÄ üîπ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É üîπ ‚îÄ‚îÄ")

	return h.GetMembers(c)
}

func (h *Handler) CancelMemberDeletion(c tb.Context) error {
	return c.Edit("–°–∫–∞—Å–æ–≤–∞–Ω–æ. –£—á–∞—Å–Ω–∏–∫–∞ –Ω–µ –±—É–ª–æ –≤–∏–¥–∞–ª–µ–Ω–æ.")
}
